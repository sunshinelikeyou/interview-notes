import{_ as t,D as h,c as p,j as s,a as i,I as n,a4 as l,o as k}from"./chunks/framework.uym2WrGe.js";const li=JSON.parse('{"title":"Javascript Part","description":"","frontmatter":{},"headers":[],"relativePath":"src/javascript.md","filePath":"src/javascript.md","lastUpdated":1724913643000}'),e={name:"src/javascript.md"},r=s("h1",{id:"javascript-part",tabindex:"-1"},[i("Javascript Part "),s("a",{class:"header-anchor",href:"#javascript-part","aria-label":'Permalink to "Javascript Part"'},"​")],-1),E={class:"table-of-contents"},d={href:"#js数据类型有哪些-都存储在内存的什么位置"},g={href:"#es6-新增数据类型-set-weakset-map-weakmap-是什么-如何使用"},y={href:"#js-数组和伪数组的区别-常见的伪数组有哪些-如何转换成数组"},c={href:"#如何判断数据类型-有何区别"},F={href:"#数组的常用方法有哪些-改变原数组的有哪些"},b={href:"#如何实现数组去重-如何实现数组扁平化"},o={href:"#常见的数组排序方法有哪些-各自的时间复杂度是多少"},u={href:"#手写一个对象的深拷贝方法-考虑循环引用-栈溢出的情况"},m={href:"#树-数组数据格式互相转换"},A={href:"#路由模式history-hash模式的区别-原理-实现方式"},C={href:"#call-apply-bind-的作用-手写一个call-apply-bind方法"},D={href:"#说说堆-栈区别特点"},B={href:"#什么是防抖-什么是节流-有何区别-实现节流-防抖函数"},_={href:"#什么是事件循环-宏任务和微任务-事件循环的执行顺序-如下代码输出顺序"},v={href:"#什么是闭包-闭包的优缺点-使用场景"},f={href:"#说说垃圾回收机制"},x={href:"#什么是原型-原型链是如何产生的-原型链的查找机制"},j={href:"#js的继承方式有哪些-如何实现继承"},T={href:"#intersectionobserver-mutationobserver-resizeobserver-api-是做什么的-如何使用"},w={href:"#函数柯里化"},S={href:"#如何实现大文件上传-如何实现分片上传-如何实现断点续传"},I={href:"#如何一次性渲染十万条数据还能保证页面不卡顿"},q={id:"js数据类型有哪些-都存储在内存的什么位置",tabindex:"-1"},P=s("a",{class:"header-anchor",href:"#js数据类型有哪些-都存储在内存的什么位置","aria-label":'Permalink to "js数据类型有哪些？都存储在内存的什么位置？ <Badge type="tip" text="primary" />"'},"​",-1),O=l("",1),V={id:"es6-新增数据类型-set-weakset-map-weakmap-是什么-如何使用",tabindex:"-1"},M=s("a",{class:"header-anchor",href:"#es6-新增数据类型-set-weakset-map-weakmap-是什么-如何使用","aria-label":'Permalink to "es6 新增数据类型 Set WeakSet Map WeakMap 是什么，如何使用 <Badge type="tip" text="primary" />"'},"​",-1),R=l("",1),N={id:"js-数组和伪数组的区别-常见的伪数组有哪些-如何转换成数组",tabindex:"-1"},L=s("a",{class:"header-anchor",href:"#js-数组和伪数组的区别-常见的伪数组有哪些-如何转换成数组","aria-label":'Permalink to "js 数组和伪数组的区别，常见的伪数组有哪些？如何转换成数组<Badge type="tip" text="primary" />"'},"​",-1),$=l("",1),z={id:"如何判断数据类型-有何区别",tabindex:"-1"},J=s("a",{class:"header-anchor",href:"#如何判断数据类型-有何区别","aria-label":'Permalink to "如何判断数据类型，有何区别 <Badge type="tip" text="primary" />"'},"​",-1),W=l("",1),H={id:"数组的常用方法有哪些-改变原数组的有哪些",tabindex:"-1"},U=s("a",{class:"header-anchor",href:"#数组的常用方法有哪些-改变原数组的有哪些","aria-label":'Permalink to "数组的常用方法有哪些，改变原数组的有哪些 <Badge type="tip" text="primary" />"'},"​",-1),Q=l("",1),G={id:"如何实现数组去重-如何实现数组扁平化",tabindex:"-1"},K=s("a",{class:"header-anchor",href:"#如何实现数组去重-如何实现数组扁平化","aria-label":'Permalink to "如何实现数组去重，如何实现数组扁平化？ <Badge type="tip" text="primary" />"'},"​",-1),X=l("",1),Y={id:"常见的数组排序方法有哪些-各自的时间复杂度是多少",tabindex:"-1"},Z=s("a",{class:"header-anchor",href:"#常见的数组排序方法有哪些-各自的时间复杂度是多少","aria-label":'Permalink to "常见的数组排序方法有哪些，各自的时间复杂度是多少 <Badge type="warning" text="middle" />"'},"​",-1),ss=l("",1),is={id:"手写一个对象的深拷贝方法-考虑循环引用-栈溢出的情况",tabindex:"-1"},as=s("a",{class:"header-anchor",href:"#手写一个对象的深拷贝方法-考虑循环引用-栈溢出的情况","aria-label":'Permalink to "手写一个对象的深拷贝方法，考虑循环引用，栈溢出的情况 <Badge type="warning" text="middle" />"'},"​",-1),ns=l("",1),ls={id:"树-数组数据格式互相转换",tabindex:"-1"},ts=s("a",{class:"header-anchor",href:"#树-数组数据格式互相转换","aria-label":'Permalink to "树，数组数据格式互相转换 <Badge type="warning" text="middle" />"'},"​",-1),hs=l("",1),ps={id:"路由模式history-hash模式的区别-原理-实现方式",tabindex:"-1"},ks=s("a",{class:"header-anchor",href:"#路由模式history-hash模式的区别-原理-实现方式","aria-label":'Permalink to "路由模式history，hash模式的区别，原理，实现方式 <Badge type="warning" text="middle" />"'},"​",-1),es=l("",1),rs={id:"call-apply-bind-的作用-手写一个call-apply-bind方法",tabindex:"-1"},Es=s("a",{class:"header-anchor",href:"#call-apply-bind-的作用-手写一个call-apply-bind方法","aria-label":'Permalink to "call,apply,bind 的作用，手写一个call,apply,bind方法 <Badge type="warning" text="middle" />"'},"​",-1),ds=l("",1),gs={id:"说说堆-栈区别特点",tabindex:"-1"},ys=s("a",{class:"header-anchor",href:"#说说堆-栈区别特点","aria-label":'Permalink to "说说堆，栈区别特点 <Badge type="warning" text="middle" />"'},"​",-1),cs=s("details",{class:"details custom-block"},[s("summary",null,"回答"),s("blockquote",null,[s("p",null,[i("栈(stack)是一种遵循后进先出（LIFO）原则的有序集合。新添加的或待删除的元素都保存在栈的同一端，称作栈顶，另一端就叫栈底。"),s("br"),i(" JavaScript中的堆（Heap）是一块用于存储动态分配内存的区域。在这个堆里，我们可以存储复杂的数据结构，比如对象和数组。不同于栈（Stack），堆的大小不是固定的，而是可以根据需要动态扩展")])])],-1),Fs={id:"什么是防抖-什么是节流-有何区别-实现节流-防抖函数",tabindex:"-1"},bs=s("a",{class:"header-anchor",href:"#什么是防抖-什么是节流-有何区别-实现节流-防抖函数","aria-label":'Permalink to "什么是防抖，什么是节流，有何区别，实现节流，防抖函数 <Badge type="warning" text="middle" />"'},"​",-1),os=l("",1),us={id:"什么是事件循环-宏任务和微任务-事件循环的执行顺序-如下代码输出顺序",tabindex:"-1"},ms=s("a",{class:"header-anchor",href:"#什么是事件循环-宏任务和微任务-事件循环的执行顺序-如下代码输出顺序","aria-label":'Permalink to "什么是事件循环，宏任务和微任务，事件循环的执行顺序,如下代码输出顺序 <Badge type="warning" text="middle" />"'},"​",-1),As=l("",2),Cs={id:"什么是闭包-闭包的优缺点-使用场景",tabindex:"-1"},Ds=s("a",{class:"header-anchor",href:"#什么是闭包-闭包的优缺点-使用场景","aria-label":'Permalink to "什么是闭包，闭包的优缺点，使用场景 <Badge type="warning" text="middle" />"'},"​",-1),Bs=s("details",{class:"details custom-block"},[s("summary",null,"回答"),s("ul",null,[s("li",null,"闭包是指那些能够访问独立(自由)变量的函数(变量在本地使用, 但定义在一个封闭的作用域中). 换句话说, 这些函数可以「记忆」它被创建时候的环境. -- MDN"),s("li",null,"闭包是有权访问另一个函数作用域的函数. -- 《JavaScript 高级程序设计(第 3 版)》"),s("li",null,"函数对象可以通过作用域链相互关联起来, 函数体内部的变量都可以保存在函数作用域内, 这种特性在计算机科学文献中称为闭包. -- 《JavaScript 权威指南(第 6 版)》"),s("li",null,"当函数可以记住并访问所在的词法作用域时, 就产生了闭包, 即使函数是在当前词法作用域之外执行. -- 《你不知道的 JavaScript(上卷)》")]),s("blockquote",null,[s("p",null,[i("使用场景：保护变量，缓存计算结果，模块化防止全局污染，防抖，节流"),s("br"),i(" 缺点：内存占用，性能损耗")])])],-1),_s={id:"说说垃圾回收机制",tabindex:"-1"},vs=s("a",{class:"header-anchor",href:"#说说垃圾回收机制","aria-label":'Permalink to "说说垃圾回收机制 <Badge type="warning" text="middle" />"'},"​",-1),fs=l("",1),xs={id:"什么是原型-原型链是如何产生的-原型链的查找机制",tabindex:"-1"},js=s("a",{class:"header-anchor",href:"#什么是原型-原型链是如何产生的-原型链的查找机制","aria-label":'Permalink to "什么是原型，原型链是如何产生的，原型链的查找机制  <Badge type="warning" text="middle" />"'},"​",-1),Ts=s("details",{class:"details custom-block"},[s("summary",null,[i("回答 "),s("a",{href:"https://blog.csdn.net/m0_55734030/article/details/127971640",target:"_blank",rel:"noreferrer"},"参考链接")]),s("blockquote",null,[s("p",null,[i("显示原型：每一个类（构造函数）都有一个显示原型prototype（本质就是个对象）"),s("br"),i(" 隐式原型：每一个实例对象都有一个隐式原型__proto__，指向构造函数的原型prototype"),s("br"),i(" 原型链：查找对象实例的方法和属性时，先在自身找，找不到则沿着__proto__（可以通过Object.getPrototypeOf(obj)获取实例原型）向上查找，我们把查找__proto__形成的链条关系称原型链（实现了js继承）")])])],-1),ws={id:"js的继承方式有哪些-如何实现继承",tabindex:"-1"},Ss=s("a",{class:"header-anchor",href:"#js的继承方式有哪些-如何实现继承","aria-label":'Permalink to "js的继承方式有哪些，如何实现继承 <Badge type="warning" text="middle" />"'},"​",-1),Is=l("",1),qs={id:"intersectionobserver-mutationobserver-resizeobserver-api-是做什么的-如何使用",tabindex:"-1"},Ps=s("a",{class:"header-anchor",href:"#intersectionobserver-mutationobserver-resizeobserver-api-是做什么的-如何使用","aria-label":'Permalink to "IntersectionObserver, MutationObserver, ResizeObserver API 是做什么的，如何使用 <Badge type="warning" text="middle" />"'},"​",-1),Os={class:"details custom-block"},Vs=l("",8),Ms={id:"手撕-写一个高阶函数-第一个参数传递一个函数-第二个参数传递执行的次数-第三个参数传递时间间隔-要求它返回一个新的函数-调用新函数时-它每个时间间隔执行对应的参数函数-执行一定次数后结束。",tabindex:"-1"},Rs=s("a",{class:"header-anchor",href:"#手撕-写一个高阶函数-第一个参数传递一个函数-第二个参数传递执行的次数-第三个参数传递时间间隔-要求它返回一个新的函数-调用新函数时-它每个时间间隔执行对应的参数函数-执行一定次数后结束。","aria-label":'Permalink to "手撕：写一个高阶函数，第一个参数传递一个函数，第二个参数传递执行的次数，第三个参数传递时间间隔，要求它返回一个新的函数，调用新函数时，它每个时间间隔执行对应的参数函数，执行一定次数后结束。 <Badge type="warning" text="middle" />"'},"​",-1),Ns=l("",1),Ls={id:"函数柯里化",tabindex:"-1"},$s=s("a",{class:"header-anchor",href:"#函数柯里化","aria-label":'Permalink to "函数柯里化 <Badge type="warning" text="middle" />"'},"​",-1),zs=l("",2),Js={id:"如何实现大文件上传-如何实现分片上传-如何实现断点续传",tabindex:"-1"},Ws=s("a",{class:"header-anchor",href:"#如何实现大文件上传-如何实现分片上传-如何实现断点续传","aria-label":'Permalink to "如何实现大文件上传，如何实现分片上传,如何实现断点续传 <Badge type="danger" text="senior" />"'},"​",-1),Hs=s("details",{class:"details custom-block"},[s("summary",null,[i("回答 "),s("a",{href:"https://juejin.cn/post/7312723512723488822?searchId=202408261110269E84D48A929E3B5265E6",target:"_blank",rel:"noreferrer"},"参考链接")]),s("ul",null,[s("li",null,"计算文件MD5,需要用到 ‘spark-md5’依赖包，直接 npm i spark-md5 即可"),s("li",null,"文件分片，用到文件的 “slice” api,将文件进行切割"),s("li",null,"调用服务端主要是为了确认相同文件是否上传，如果已有MD5证明已经上传过，接着上传之前失败的分片")])],-1),Us={id:"如何一次性渲染十万条数据还能保证页面不卡顿",tabindex:"-1"},Qs=s("a",{class:"header-anchor",href:"#如何一次性渲染十万条数据还能保证页面不卡顿","aria-label":'Permalink to "如何一次性渲染十万条数据还能保证页面不卡顿 <Badge type="danger" text="senior" />"'},"​",-1),Gs=l("",1);function Ks(Xs,Ys,Zs,si,ii,ai){const a=h("Badge");return k(),p("div",null,[r,s("nav",E,[s("ul",null,[s("li",null,[s("a",d,[i("js数据类型有哪些？都存储在内存的什么位置？ "),n(a,{type:"tip",text:"primary"})])]),s("li",null,[s("a",g,[i("es6 新增数据类型 Set WeakSet Map WeakMap 是什么，如何使用 "),n(a,{type:"tip",text:"primary"})])]),s("li",null,[s("a",y,[i("js 数组和伪数组的区别，常见的伪数组有哪些？如何转换成数组"),n(a,{type:"tip",text:"primary"})])]),s("li",null,[s("a",c,[i("如何判断数据类型，有何区别 "),n(a,{type:"tip",text:"primary"})])]),s("li",null,[s("a",F,[i("数组的常用方法有哪些，改变原数组的有哪些 "),n(a,{type:"tip",text:"primary"})])]),s("li",null,[s("a",b,[i("如何实现数组去重，如何实现数组扁平化？ "),n(a,{type:"tip",text:"primary"})])]),s("li",null,[s("a",o,[i("常见的数组排序方法有哪些，各自的时间复杂度是多少 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",u,[i("手写一个对象的深拷贝方法，考虑循环引用，栈溢出的情况 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",m,[i("树，数组数据格式互相转换 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",A,[i("路由模式history，hash模式的区别，原理，实现方式 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",C,[i("call,apply,bind 的作用，手写一个call,apply,bind方法 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",D,[i("说说堆，栈区别特点 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",B,[i("什么是防抖，什么是节流，有何区别，实现节流，防抖函数 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",_,[i("什么是事件循环，宏任务和微任务，事件循环的执行顺序,如下代码输出顺序 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",v,[i("什么是闭包，闭包的优缺点，使用场景 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",f,[i("说说垃圾回收机制 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",x,[i("什么是原型，原型链是如何产生的，原型链的查找机制 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",j,[i("js的继承方式有哪些，如何实现继承 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",T,[i("IntersectionObserver, MutationObserver, ResizeObserver API 是做什么的，如何使用 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",w,[i("函数柯里化 "),n(a,{type:"warning",text:"middle"})])]),s("li",null,[s("a",S,[i("如何实现大文件上传，如何实现分片上传,如何实现断点续传 "),n(a,{type:"danger",text:"senior"})])]),s("li",null,[s("a",I,[i("如何一次性渲染十万条数据还能保证页面不卡顿 "),n(a,{type:"danger",text:"senior"})])])])]),s("h2",q,[i("js数据类型有哪些？都存储在内存的什么位置？ "),n(a,{type:"tip",text:"primary"}),i(),P]),O,s("h2",V,[i("es6 新增数据类型 Set WeakSet Map WeakMap 是什么，如何使用 "),n(a,{type:"tip",text:"primary"}),i(),M]),R,s("h2",N,[i("js 数组和伪数组的区别，常见的伪数组有哪些？如何转换成数组"),n(a,{type:"tip",text:"primary"}),i(),L]),$,s("h2",z,[i("如何判断数据类型，有何区别 "),n(a,{type:"tip",text:"primary"}),i(),J]),W,s("h2",H,[i("数组的常用方法有哪些，改变原数组的有哪些 "),n(a,{type:"tip",text:"primary"}),i(),U]),Q,s("h2",G,[i("如何实现数组去重，如何实现数组扁平化？ "),n(a,{type:"tip",text:"primary"}),i(),K]),X,s("h2",Y,[i("常见的数组排序方法有哪些，各自的时间复杂度是多少 "),n(a,{type:"warning",text:"middle"}),i(),Z]),ss,s("h2",is,[i("手写一个对象的深拷贝方法，考虑循环引用，栈溢出的情况 "),n(a,{type:"warning",text:"middle"}),i(),as]),ns,s("h2",ls,[i("树，数组数据格式互相转换 "),n(a,{type:"warning",text:"middle"}),i(),ts]),hs,s("h2",ps,[i("路由模式history，hash模式的区别，原理，实现方式 "),n(a,{type:"warning",text:"middle"}),i(),ks]),es,s("h2",rs,[i("call,apply,bind 的作用，手写一个call,apply,bind方法 "),n(a,{type:"warning",text:"middle"}),i(),Es]),ds,s("h2",gs,[i("说说堆，栈区别特点 "),n(a,{type:"warning",text:"middle"}),i(),ys]),cs,s("h2",Fs,[i("什么是防抖，什么是节流，有何区别，实现节流，防抖函数 "),n(a,{type:"warning",text:"middle"}),i(),bs]),os,s("h2",us,[i("什么是事件循环，宏任务和微任务，事件循环的执行顺序,如下代码输出顺序 "),n(a,{type:"warning",text:"middle"}),i(),ms]),As,s("h2",Cs,[i("什么是闭包，闭包的优缺点，使用场景 "),n(a,{type:"warning",text:"middle"}),i(),Ds]),Bs,s("h2",_s,[i("说说垃圾回收机制 "),n(a,{type:"warning",text:"middle"}),i(),vs]),fs,s("h2",xs,[i("什么是原型，原型链是如何产生的，原型链的查找机制 "),n(a,{type:"warning",text:"middle"}),i(),js]),Ts,s("h2",ws,[i("js的继承方式有哪些，如何实现继承 "),n(a,{type:"warning",text:"middle"}),i(),Ss]),Is,s("h2",qs,[i("IntersectionObserver, MutationObserver, ResizeObserver API 是做什么的，如何使用 "),n(a,{type:"warning",text:"middle"}),i(),Ps]),s("details",Os,[Vs,s("h2",Ms,[i("手撕：写一个高阶函数，第一个参数传递一个函数，第二个参数传递执行的次数，第三个参数传递时间间隔，要求它返回一个新的函数，调用新函数时，它每个时间间隔执行对应的参数函数，执行一定次数后结束。 "),n(a,{type:"warning",text:"middle"}),i(),Rs]),Ns]),s("h2",Ls,[i("函数柯里化 "),n(a,{type:"warning",text:"middle"}),i(),$s]),zs,s("h2",Js,[i("如何实现大文件上传，如何实现分片上传,如何实现断点续传 "),n(a,{type:"danger",text:"senior"}),i(),Ws]),Hs,s("h2",Us,[i("如何一次性渲染十万条数据还能保证页面不卡顿 "),n(a,{type:"danger",text:"senior"}),i(),Qs]),Gs])}const ti=t(e,[["render",Ks]]);export{li as __pageData,ti as default};
