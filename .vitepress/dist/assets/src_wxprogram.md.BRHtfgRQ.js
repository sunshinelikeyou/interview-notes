import{_ as e,B as n,c as r,j as i,a,G as s,a2 as p,o}from"./chunks/framework.s54Xu68I.js";const U=JSON.parse('{"title":"wxprogram","description":"","frontmatter":{},"headers":[],"relativePath":"src/wxprogram.md","filePath":"src/wxprogram.md","lastUpdated":1725846101000}'),d={name:"src/wxprogram.md"},u={class:"table-of-contents"},x={href:"#小程序有哪几种类型文件"},m={href:"#小程序怎么跟随事件传值"},y={href:"#小程序wxss-与-css-的区别"},k={href:"#小程序的双向绑定和vue哪里不一样"},b={href:"#小程序的生命周期"},g={href:"#小程序怎么实现下拉刷新"},w={href:"#bindtap和catchtap的区别"},h={href:"#小程序有哪些传递数据的方法"},f={href:"#简述下-wx-naivageto-wx-redirectto-wx-switchtab-wx-navigateback-wx-relaunch-的区别"},v={href:"#小程序wx-if-和-hidden的区别"},E={href:"#app-json-全局配置文件描述"},B={id:"小程序有哪几种类型文件",tabindex:"-1"},T={id:"小程序怎么跟随事件传值",tabindex:"-1"},P={id:"小程序wxss-与-css-的区别",tabindex:"-1"},F={id:"小程序的双向绑定和vue哪里不一样",tabindex:"-1"},j={id:"小程序的生命周期",tabindex:"-1"},C={id:"小程序怎么实现下拉刷新",tabindex:"-1"},D={id:"bindtap和catchtap的区别",tabindex:"-1"},S={id:"小程序有哪些传递数据的方法",tabindex:"-1"},L={id:"简述下-wx-naivageto-wx-redirectto-wx-switchtab-wx-navigateback-wx-relaunch-的区别",tabindex:"-1"},V={id:"小程序wx-if-和-hidden的区别",tabindex:"-1"},A={id:"app-json-全局配置文件描述",tabindex:"-1"};function N(q,t,$,R,W,X){const l=n("Badge");return o(),r("div",null,[t[44]||(t[44]=i("h1",{id:"wxprogram",tabindex:"-1"},[a("wxprogram "),i("a",{class:"header-anchor",href:"#wxprogram","aria-label":'Permalink to "wxprogram"'},"​")],-1)),i("nav",u,[i("ul",null,[i("li",null,[i("a",x,[t[0]||(t[0]=a("小程序有哪几种类型文件？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",m,[t[1]||(t[1]=a("小程序怎么跟随事件传值？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",y,[t[2]||(t[2]=a("小程序wxss 与 css 的区别 ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",k,[t[3]||(t[3]=a("小程序的双向绑定和Vue哪里不一样？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",b,[t[4]||(t[4]=a("小程序的生命周期？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",g,[t[5]||(t[5]=a("小程序怎么实现下拉刷新？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",w,[t[6]||(t[6]=a("bindtap和catchtap的区别？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",h,[t[7]||(t[7]=a("小程序有哪些传递数据的方法？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",f,[t[8]||(t[8]=a("简述下 wx.naivageTo(), wx.redirectTo(), wx.switchTab(), wx.navigateBack(), wx.reLaunch() 的区别？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",v,[t[9]||(t[9]=a("小程序wx:if 和 hidden的区别？ ")),s(l,{type:"tip",text:"primary"})])]),i("li",null,[i("a",E,[t[10]||(t[10]=a("app.json 全局配置文件描述？ ")),s(l,{type:"tip",text:"primary"})])])])]),i("h2",B,[t[11]||(t[11]=a("小程序有哪几种类型文件？ ")),s(l,{type:"tip",text:"primary"}),t[12]||(t[12]=a()),t[13]||(t[13]=i("a",{class:"header-anchor",href:"#小程序有哪几种类型文件","aria-label":'Permalink to "小程序有哪几种类型文件？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[45]||(t[45]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"WXML： 微信自己定义的一套组件"),i("li",null,"WXSS : 用于描述 WXML 的组件样式"),i("li",null,"js : 逻辑处理"),i("li",null,"json : 小程序页面配置")])],-1)),i("h2",T,[t[14]||(t[14]=a("小程序怎么跟随事件传值？ ")),s(l,{type:"tip",text:"primary"}),t[15]||(t[15]=a()),t[16]||(t[16]=i("a",{class:"header-anchor",href:"#小程序怎么跟随事件传值","aria-label":'Permalink to "小程序怎么跟随事件传值？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[46]||(t[46]=p(`<details class="details custom-block"><summary>展开查看</summary><ul><li>在 页面标签上通过 绑定 data-key = value ， 然后绑定点击通过 e.currentTarget.dataset.key 来获取标签上绑定的值。</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bindtap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;get&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  data-name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;测试&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 拿到传值&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e.currentTarget.dataset.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details>`,1)),i("h2",P,[t[17]||(t[17]=a("小程序wxss 与 css 的区别 ")),s(l,{type:"tip",text:"primary"}),t[18]||(t[18]=a()),t[19]||(t[19]=i("a",{class:"header-anchor",href:"#小程序wxss-与-css-的区别","aria-label":'Permalink to "小程序wxss 与 css 的区别 <Badge type="tip" text="primary" />"'},"​",-1))]),t[47]||(t[47]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"wxss 背景图片只能使用网络路径，不能使用本地路径"),i("li",null,"小程序样式使用@import 引入外部样式"),i("li",null,"尺寸单位为 rpx，rpx 可以根据屏幕宽度进行自适应")])],-1)),i("h2",F,[t[20]||(t[20]=a("小程序的双向绑定和Vue哪里不一样？ ")),s(l,{type:"tip",text:"primary"}),t[21]||(t[21]=a()),t[22]||(t[22]=i("a",{class:"header-anchor",href:"#小程序的双向绑定和vue哪里不一样","aria-label":'Permalink to "小程序的双向绑定和Vue哪里不一样？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[48]||(t[48]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("p",null,"小程序必须使用this.setData()方法来改变data中的值, 直接修改data中的值，视图不会更新")],-1)),i("h2",j,[t[23]||(t[23]=a("小程序的生命周期？ ")),s(l,{type:"tip",text:"primary"}),t[24]||(t[24]=a()),t[25]||(t[25]=i("a",{class:"header-anchor",href:"#小程序的生命周期","aria-label":'Permalink to "小程序的生命周期？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[49]||(t[49]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"onLoad 页面加载时触发。一个页面只会调用一次，用于获取用户提供的信息，做初始化数据获取操作。参数可以获取打开当前页面路径中的参数"),i("li",null,"onShow 页面显示/切入前台时触发。"),i("li",null,"onReady 页面初次渲染完成时触发。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。"),i("li",null,"onHide 页面隐藏/切入后台时触发。 如进入其他页面，最小化等"),i("li",null,"onUnload 页面卸载时触发。如使用back返回上一页，或navigateTo或redirectTo或navigateBack回到原页面")])],-1)),i("h2",C,[t[26]||(t[26]=a("小程序怎么实现下拉刷新？ ")),s(l,{type:"tip",text:"primary"}),t[27]||(t[27]=a()),t[28]||(t[28]=i("a",{class:"header-anchor",href:"#小程序怎么实现下拉刷新","aria-label":'Permalink to "小程序怎么实现下拉刷新？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[50]||(t[50]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"需要在app.json中配置window选项，设置enablePullDownRefresh为true"),i("li",null,'在需要下拉刷新的页面json文件中配置"enablePullDownRefresh": true')])],-1)),i("h2",D,[t[29]||(t[29]=a("bindtap和catchtap的区别？ ")),s(l,{type:"tip",text:"primary"}),t[30]||(t[30]=a()),t[31]||(t[31]=i("a",{class:"header-anchor",href:"#bindtap和catchtap的区别","aria-label":'Permalink to "bindtap和catchtap的区别？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[51]||(t[51]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"都是点击事件"),i("li",null,"bindtap 不会阻止冒泡事件向上冒泡，catchtap可以阻止冒泡事件向上冒泡")])],-1)),i("h2",S,[t[32]||(t[32]=a("小程序有哪些传递数据的方法？ ")),s(l,{type:"tip",text:"primary"}),t[33]||(t[33]=a()),t[34]||(t[34]=i("a",{class:"header-anchor",href:"#小程序有哪些传递数据的方法","aria-label":'Permalink to "小程序有哪些传递数据的方法？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[52]||(t[52]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"页面跳转传递参数: wx.navigateTo({url: '/pages/index/index?id=1'}), 然后再目标页面通过onLoad方法获取参数"),i("li",null,"全局变量传递参数：App({globalData:{id:1}})，然后在目标页面通过getApp().globalData.id获取"),i("li",null,"页面缓存传递参数：wx.setStorageSync('id', 1), 然后在目标页面通过wx.getStorageSync('id')获取"),i("li",null,"事件传递参数：在父组件中绑定事件，然后在子组件中通过this.triggerEvent('事件名',{参数})传递")])],-1)),i("h2",L,[t[35]||(t[35]=a("简述下 wx.naivageTo(), wx.redirectTo(), wx.switchTab(), wx.navigateBack(), wx.reLaunch() 的区别？ ")),s(l,{type:"tip",text:"primary"}),t[36]||(t[36]=a()),t[37]||(t[37]=i("a",{class:"header-anchor",href:"#简述下-wx-naivageto-wx-redirectto-wx-switchtab-wx-navigateback-wx-relaunch-的区别","aria-label":'Permalink to "简述下 wx.naivageTo(), wx.redirectTo(),  wx.switchTab(), wx.navigateBack(), wx.reLaunch() 的区别？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[53]||(t[53]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"wx.naivageTo() 保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面"),i("li",null,"wx.redirectTo() 关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面"),i("li",null,"wx.switchTab() 跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面"),i("li",null,"wx.navigateBack() 关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages() 获取当前的页面栈，决定需要返回几层"),i("li",null,"wx.reLaunch() 关闭所有页面，打开到应用内的某个页面")])],-1)),i("h2",V,[t[38]||(t[38]=a("小程序wx:if 和 hidden的区别？ ")),s(l,{type:"tip",text:"primary"}),t[39]||(t[39]=a()),t[40]||(t[40]=i("a",{class:"header-anchor",href:"#小程序wx-if-和-hidden的区别","aria-label":'Permalink to "小程序wx:if 和 hidden的区别？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[54]||(t[54]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"wx:if 条件渲染，在页面中隐藏或显示某个元素，如果为true则显示该元素，如果为false则不显示该元素 相当于vue中的v-if"),i("li",null,"hidden 条件渲染，在页面中隐藏或显示某个元素，如果为true则不显示该元素，如果为false则显示该元素 相当于vue中的v-show")])],-1)),i("h2",A,[t[41]||(t[41]=a("app.json 全局配置文件描述？ ")),s(l,{type:"tip",text:"primary"}),t[42]||(t[42]=a()),t[43]||(t[43]=i("a",{class:"header-anchor",href:"#app-json-全局配置文件描述","aria-label":'Permalink to "app.json 全局配置文件描述？ <Badge type="tip" text="primary" />"'},"​",-1))]),t[55]||(t[55]=i("details",{class:"details custom-block"},[i("summary",null,"展开查看"),i("ul",null,[i("li",null,"window 用于设置小程序的状态栏、导航条、标题、窗口背景色"),i("li",null,"tabBar 如果小程序是一个多 tab 应用（客户端窗口的底部或顶部有 tab 栏可以切换页面），可以通过 tabBar 设置 tab 栏的表现，包括颜色、字体、位置, 最多可以设置5个tab，最少2个tab"),i("li",null,"pages 用于描述小程序所有页面路径，数组的第一项代表小程序的初始页面")])],-1))])}const G=e(d,[["render",N]]);export{U as __pageData,G as default};
